import numpy as np
from matplotlib import pyplot as plt

# Dropout 0.2
ex1 = [[-0.9453,  0.7950,  1.3661, -0.9128, -0.2050,  0.3661, -0.6244, -0.2354, 0.9888],
       [-1.4863,  0.0766,  1.6529, -0.9006, -
           0.2687, 0.1150,  0.1666, -0.9960, 1.3651],
       [-0.9462,  1.7535,  1.9756, -0.6106, -
           1.1308, -1.5408, -0.0318, -0.6127, 0.6114],
       [-0.5136,  1.7100,  1.5966, -1.4055, -
           0.3104, 0.2317, -1.2040,  0.6071, 0.1651],
       [-1.3232, -0.0729,  0.1976, -1.4108,
           0.4678, -0.9674,  0.0765, -0.0362, 0.9442],
       [-0.8972,  0.8294,  0.3179, -0.1987, -
           0.0893, 0.4257, -0.9279, -0.1417, 1.3278],
       [-1.2523,  0.8633,  2.1192, -0.8164, -
           0.6730, 0.8920, -0.6244, -1.0415, 1.1409],
       [1.9262,  0.6890,  1.7260, -1.5113, -
           0.1826, -0.7078,  0.0037, -0.4112, 1.8597],
       [-1.0050,  0.5812,  0.4065, -0.3165,  0.3321, 1.1190, -0.9472, -0.6283, 1.7979]]

# Dropout 0.5
ex2 = [[-0.6604,  0.4071,  0.5665, -1.0653,  0.5379,  0.1241, -0.8835, -0.2499, 0.6466],
       [-1.0342, -0.0668,  0.2124, -1.2273, -
           0.0202, -0.0014, -0.2375, -1.0138, 0.4558],
       [-0.3429,  0.1015, -0.1099, -1.9590, -
           0.3873, 1.1039, -0.3269, -1.2712, 0.1657],
       [0.0811,  1.0615,  1.4973, -1.2648, -
           0.5276, -0.2374, -0.1983,  0.1412, 1.3813],
       [-0.7228,  0.7397,  0.0936, -0.5846,  0.6612,
           0.4933, -1.8919,  1.1483, -0.0811],
       [-2.2578, -0.1094, -0.2890, -0.1887, -
           0.2509, 0.1307, -0.4234, -1.0368, 0.7507],
       [0.4250, -0.5765,  1.6715, -0.2238,  0.1971,
           0.2727, -0.4091,  1.1787, 0.9577],
       [-0.2884,  0.9605,  0.4093, -1.0191,  0.8656,
           1.7360, -0.6219, -1.3981, 0.1143],
       [-1.1301,  1.2487,  0.4938,  0.4639,  0.7864,
        0.9248,  0.1812, -1.0897, -0.4998]]

# Gaussian 0.01
ex3 = [[0.6814,  0.6126, -0.3128,  0.1330,  0.2541, -1.1855,  0.7377,  0.1070,
        0.5659],
       [0.1741,  0.9489, -0.9729, -0.1504, -0.0686, -1.1691,  0.3523,  0.2351,
        0.1637],
       [0.0660,  0.3698, -0.8693, -0.1356,  0.1250, -1.4981,  0.3902,  0.3467,
        0.5012],
       [1.1390,  0.7756, -0.9976, -0.5384,  0.6521, -1.2081,  0.8451,  0.2111,
        0.9655],
       [0.8187,  0.2552, -0.4992,  0.6616, -0.4806, -0.6527,  0.4182,  0.6979,
        0.5877],
       [0.9206,  0.3987, -0.0412,  0.1484,  0.2667, -0.9044,  0.7237,  0.2890,
        0.2533],
       [0.6032,  1.2838, -0.2381,  0.1499, -0.0607, -0.9456,  0.1898,  0.2997,
        0.4458],
       [-0.0395,  1.1367,  0.0460,  0.4435, -0.1870, -1.2299,  0.5977,  0.5087,
        1.2451],
       [0.8269,  0.0470, -0.3054,  0.3005,  0.4751, -1.8150,  1.0288,  0.7862,
        0.6340]]

# Gaussian 0.1
ex4 = [[0.1248,  0.1534,  0.8377, -1.7149, -0.2467,  0.7785,  0.0671, -0.3597,
        1.6825],
       [-2.3969,  3.5251,  0.7431, -4.7008, -0.6091, -5.3280, -3.8203, -0.6655,
        -5.3515],
       [4.3127, -0.7377, -1.8575,  4.5400,  2.4267,  3.8931, -5.8541, -1.5558,
        3.4355],
       [-3.3462,  5.7144, -2.0195,  0.6985, -1.9740, -5.0484, -2.3874,  5.3852,
        -3.1294],
       [-4.1349, -2.9278,  6.2955, -4.9465, -1.1083, -2.8479,  8.8087, -6.7040,
        -7.5765],
       [3.4938,  7.7401, -0.9065, -0.1752,  4.2214, -0.5640, -4.4060, -7.9439,
        -3.1626],
       [3.0631, -2.2823,  6.7333, -0.7474, -5.7780, -6.0620,  0.9063, -1.4785,
        -3.5566],
       [-1.0946, -5.5435,  1.4313,  1.2295,  5.2798,  2.5028,  1.6328,  2.5321,
        -4.8118],
       [-10.4952,  -1.7851,  -4.9555,  -1.7787,  -3.4864,  -1.4361,  -2.9319,
        -6.6753,  14.3036]]


def softmax(values):
    values = np.array(values)
    x = values - max(values)
    softmax = np.exp(x) / np.sum(np.exp(x))

    return softmax


def plot_logits(ex, x):
    sum_logits = []

    for i in range(9):
        val = 0
        for j in range(8):
            val += ex[j][i]

        sum_logits.append(val)

    plt.figure(x)
    # Logits
    plt.subplot(2, 1, 1)
    plt.plot(ex[0])
    plt.plot(ex[1])
    plt.plot(ex[2])
    plt.plot(ex[3])
    plt.plot(ex[4])
    plt.plot(ex[5])
    plt.plot(ex[6])
    plt.plot(ex[7])
    plt.plot(sum_logits)

    # Probabilities
    plt.subplot(2, 1, 2)
    plt.plot(softmax(ex[0]))
    plt.plot(softmax(ex[1]))
    plt.plot(softmax(ex[2]))
    plt.plot(softmax(ex[3]))
    plt.plot(softmax(ex[4]))
    plt.plot(softmax(ex[5]))
    plt.plot(softmax(ex[6]))
    plt.plot(softmax(ex[7]))
    plt.plot(softmax(sum_logits))


plot_logits(ex1, 1)
plot_logits(ex2, 2)
plot_logits(ex3, 3)
plot_logits(ex4, 4)
plt.show()
